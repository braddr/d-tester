\include{/include/test-results}
\set{show_history_submenu}{selected}

\validateURLParameter{projectid}
\validateURLParameterString{os}

\set{Linux_32}{Linux 32}
\set{Linux_32_64}{Linux 32/64}
\set{Linux_64_32}{Linux 64/32}
\set{Linux_64_64}{Linux 64}
\set{FreeBSD_32}{FreeBSD 32}
\set{FreeBSD_64_64}{FreeBSD 64}
\set{FreeBSD_32_64}{FreeBSD 32/64}
\set{FreeBSD_64_32}{FreeBSD 64/32}
\set{Darwin_32}{OSX 32}
\set{Darwin_64_64}{OSX 64}
\set{Darwin_64_32}{OSX 64/32}
\set{Win_32}{Windows 32}
\set{Win_32_64}{Windows 64}

\pageHeader{60}{\get{projectid}}{
    <link rel="stylesheet" href="/css/history.css" type="text/css">
}

\if{\get{numresults}}{
    \if{\not{\op{\get{numresults}}{V}}}{
        \set{numresults}{50}
    }
}{
    \set{numresults}{50}
}

\setProjectType{\get{projectid}}

# \1 == test type id
# \2 == repo id
\set{getKey}{\quote{
    \if{\eq{\1}{1}}{1}{\1_\2}
}}

# no inputs, clears a result set
\set{resetResultSet}{\quote{
    \set{result_id}{}
    \set{result_start}{}
    \set{result_end}{}
    \set{result_duration}{}
    \set{result_platform}{}

    \set{i}{0}
    \while{
        \op{\typelist_len}{>}{\i}
    }{
        \set{key}{\getKey{\get{typelist_\get{i}_id}}{\get{typelist_\get{i}_rid}}}

        \set{result_rc_\key}{}
        \set{result_st_\key}{}
        \set{result_et_\key}{}
        \set{result_dur_\key}{}
        \set{result_id_\key}{}

        \inc{i}
    }
}}

# \1 == key of test to check
\set{resultClass}{\quote{
    \processRC{\get{result_rc_\1}}
    {\get{class}}
}}

# \1 == key of test to check
# \2 == execution time
\set{resultText}{\quote{
    \if{\not{\eq{\get{result_rc_\1}}{}}}{
        {\2}
    }{
        \if{\eq{\get{result_st_\1}}{}}{
            {&nbsp;}
        }{
            {\2 +}
        }
    }
}}

# render the html for one result set
# \1 is true if it's the last row
\set{showResultSet}{\quote{
    <tr\if{\1}{\ class="last"}>
        <td class="time">\get{result_start} (\get{result_duration})</td>

        \set{i}{0}
        \while{
            \op{\typelist_len}{>}{\i}
        }{
            \set{key}{\getKey{\get{typelist_\get{i}_id}}{\get{typelist_\get{i}_rid}}}
            \inc{i}
            <td class="result \resultClass{\key}\if{\and{\eq{\i}{\typelist_len}}{\1}}{\ last}" title="\get{result_start} - \get{result_end}">
                \href{\resultText{\key}{\get{result_dur_\key}}}{show-run.ghtml?projectid=\get{projectid}&amp;runid=\get{result_id}&amp;dataid=\get{result_id_\key}}
            </td>
        }
    </tr>
}}

\set{drawHeader}{\quote{
    <tr>
        <th>Time (duration)</th>
        \set{i}{0}
        \while{
            \op{\typelist_len}{>}{\i}
        }{
            <th>
            \if{\eq{\get{typelist_\get{i}_tname}}{checkout}}{
                checkout
            }{\if{ \eq{\strindex{\get{typelist_\get{i}_tname}}{merge}}{0} }{
                merge
            }{
                \get{typelist_\get{i}_tname}\if{\get{typelist_\get{i}_rname}}{&nbsp;\get{typelist_\get{i}_rname}}
            }}
            </th>
            \inc{i}
        }
    </tr>
}}

# \1 == platform
\set{draw}{\quote{
    \set{minid}{}
    \sqlexec{
        select id
          from test_runs
         where platform = "\sqlquote{\1}" and
               project_id = \get{projectid}
         order by start_time desc, id
         limit 50
    }
    \while{\sqlrow{minid}}{}

    \if{\get{minid}}{
        # build set of used test types
        \sqlexec{
            select distinct td.test_type_id, td.repository_id, tt.name, r.name
              from test_runs tr, test_data td left join repositories r on td.repository_id = r.id, test_types tt
             where tr.id = td.test_run_id and
                   td.test_type_id = tt.id and
                   tr.id >= \get{minid} and
                   tr.project_id = \get{projectid}
             order by 1, 2
        }
        \set{i}{0}
        \while{\sqlrow{typelist_\get{i}_id}{typelist_\get{i}_rid}{typelist_\get{i}_tname}{typelist_\get{i}_rname}}{
            \set{repo_\get{typelist_\get{i}_rid}}{\get{typelist_\get{i}_rname}}
            \inc{i}
        }
        \set{typelist_len}{\i}

        \drawHeader

        \resetResultSet
        \set{previd}{}

        \sqlexec{
                select tr.id, tr.start_time, tr.end_time, timediff(ifnull(tr.end_time,now()), tr.start_time), tr.platform,
                       td.id, td.test_type_id, td.repository_id, td.start_time, td.end_time, timediff(ifnull(td.end_time,now()), td.start_time), td.rc
                  from test_runs tr left join test_data td on tr.id = td.test_run_id
                 where tr.platform = "\sqlquote{\1}" and tr.id >= \minid and project_id = \get{projectid}
              order by tr.start_time desc, tr.id desc
        }
        \set{haverow}{\sqlrow{id}{start_time}{end_time}{duration}{platform}{tdid}{tdtid}{tdrepoid}{tdst}{tdet}{tddur}{tdrc}}
        \while{\haverow}{
            \set{result_id}{\get{id}}
            \set{result_start}{\get{start_time}}
            \set{result_end}{\get{end_time}}
            \set{result_duration}{\get{duration}}
            \set{result_platform}{\get{platform}}

            \set{key}{\getKey{\get{tdtid}}{\get{tdrepoid}}}

            \set{result_rc_\key}{\get{tdrc}}
            \set{result_st_\key}{\get{tdst}}
            \set{result_et_\key}{\get{tdet}}
            \set{result_dur_\key}{\get{tddur}}
            \set{result_id_\key}{\get{tdid}}
            \set{keepgoing}{1}
            \set{previd}{\get{id}}
            \while{
                \get{keepgoing}
            }{
                \set{haverow}{\sqlrow{id}{start_time}{end_time}{duration}{platform}{tdid}{tdtid}{tdrepoid}{tdst}{tdet}{tddur}{tdrc}}
                \if{\haverow}{
                    \if{\eq{\get{previd}}{\get{id}}}{
                        \set{key}{\getKey{\get{tdtid}}{\get{tdrepoid}}}

                        \set{result_rc_\key}{\get{tdrc}}
                        \set{result_st_\key}{\get{tdst}}
                        \set{result_et_\key}{\get{tdet}}
                        \set{result_dur_\key}{\get{tddur}}
                        \set{result_id_\key}{\get{tdid}}
                    }{
                        \showResultSet
                        \resetResultSet
                        \unset{keepgoing}
                    }
                }{
                    \unset{keepgoing}
                }
            }
        }
        \showResultSet{1}
        \resetResultSet
    }
}}

<table class="whiterounded" id="history">
\draw{\get{os}}
</table>

\pageFooter

